#
# wm independent hotkeys
#

# NOTE: Be careful when using chords, see: https://github.com/baskerville/sxhkd/issues/83

# -- Lock screen -- #
super + Escape
	betterlockscreen -l blur

# -- Screenshots -- #
super + Print
	flameshot full --path "$HOME/Pictures/Screenshots"
Print
	flameshot gui --raw | xclip -selection clipboard -t image/png

# -- Pin temporary screenshot on screen -- #
super + shift + Print
	pinscrot

super + alt + BackSpace
	rofi_power_menu

# -- Open terminal -- #
super + Return
	kitty sh -c 'tmux'

# -- Dropdown terminal -- #
super + alt + Return
	dropdown_terminal

# -- Open browser -- #
super + b
	brave-browser
super + shift + b
	brave-browser --incognito

# -- Emoji selector (rofimoji) -- #
# NOTE: escaping brackets is only necessary in this file
super + i
	rofimoji --prompt Emoji --max=0 --rofi-args "-theme-str '#window \{ fullscreen: true; padding: 20%; \}'" &!

# -- Character selector (rofimoji) -- #
# NOTE: escaping brackets is only necessary in this file
super + alt + i
	rofimoji --file all --prompt Character --max=0 --rofi-args "-theme-str '#window \{ fullscreen: true; padding: 20%; \}'" &!

# -- Show clipboard contents -- #
super + Insert
	notify-send "ðŸ“‹ Clipboard contents:" "$(xclip -o -selection clipboard)"

# -- Volume Up -- #
super + equal
	pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
super + shift + plus
	pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status

# -- Volume Down -- #
super + minus
	pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
super + shift + minus
	pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status

# -- Volume Mute -- #
super + m
	pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status

# -- Brightness Up -- #
super + shift + parenright
	brightness up

# -- Brightness Down -- #
super + shift + parenleft
	brightness down

# -- Program launcher (rofi) -- #
# NOTE: escaping brackets is only necessary in this file
super + o
	rofi -show drun -show-icons -display-drun "Launch" -theme-str '#window \{ fullscreen: true; padding: 20%; \}' &!

super + alt + o
	kitty sh -c 'lf'

# -- Rename Workspace (similar to tmux) -- #
super + comma
	$HOME/.config/bspwm/bspwm_desktop_rename

# -- Make sxhkd reload its configuration file -- #
super + shift + c
	pkill -USR1 -x sxhkd && notify-send 'sxhkd config reloaded'

# bspwm specifics

# -- Set the window state -- #
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}

# # -- Focus the next/previous window in the current desktop -- #
# super + {_,shift + }c
# 	bspc node -f {next,prev}.local.!hidden.window

# -- Focus the next window in the current desktop -- #
super + c
	bspc node -f {next}.local.!hidden.window

# -- First/Last workspace -- #
super + {Home, End}
	bspc desktop -f '^{1,10}'

# -- Next/Previous workspace -- #
super + {Prior, Next}
	bspc desktop -f {prev,next}.local

# -- Next/Previous active workspace -- #
super + {p, n}
	bspc desktop -f {prev,next}.occupied.local

# -- Focus or send to the given desktop -- #
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# -- Focus or send to the given desktop (chord) -- #
super + period; {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# -- Move window to workspace and then focus it -- #
super + alt + {1-9,0}
	id=$(bspc query -N -n); bspc node -d ^{1-9,10}; bspc node -f ${id}

# -- Move window to workspace and then focus it (chord) -- #
super + period; alt + {1-9,0}
	id=$(bspc query -N -n); bspc node -d ^{1-9,10}; bspc node -f ${id}

# -- Restart bspwm -- #
super + shift + r
	bspc wm -r && notify-send 'bspwm has been restarted'

super + @space
	bspc node $1 --flag sticky

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# Toggle gaps
super + g
	[ "$(bspc config window_gap)" -gt "0" ] && bspc config window_gap 0 || bspc config window_gap 5

# swap the current node and the biggest window
super + alt + g
	bspc node -s biggest.window.local

# Rotate clock-wise
super + alt + bracketright
	bspc node @/ -R -90

# Rotate anti-clock-wise
super + alt + bracketleft
	bspc node @/ -R 90
#
# state/flags
#

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# # focus the node for the given path jump
# super + {p,b,comma,period}
# 	bspc node -f @{parent,brother,first,second}

# focus the last node/desktop
super + Tab
	bspc desktop -f last

# # focus the older or newer node in the focus history
# super + {o,i}
# 	bspc wm -h off; \
# 	bspc node {older,newer} -f; \
# 	bspc wm -h on

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# expand a window by moving one of its side outward
super + shift + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


# -- kill focused window -- #
super + BackSpace
	bspc node -{c}


# -- Focus/Move window by direction (vim keys) -- #
super + {_,alt + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}


# -- Toggle fullscreen window -- #
super + f
	bspc node -t \~fullscreen

