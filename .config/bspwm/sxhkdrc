# Set window state
super + {t,s}
	bspc node -t {tiled,floating}

# Focus next window in the current desktop
super + w
	bspc node -f {next}.local.!hidden.window

# First/Last workspace
super + {Home, End}
	bspc desktop --focus 'focused:^{1,10}'

# Next/Previous workspace
super + {Prior, Next}
	bspc desktop -f {prev,next}.local

# Next/Previous active workspace
super + {p, n}
	bspc desktop -f {prev,next}.occupied.local

# Focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop --focus,node --to-desktop} 'focused:^{1-9,10}'

# Move node or switch to prev/next monitor
super + {_, shift} + {bracketleft, bracketright}
	bspc {monitor --focus, node --to-monitor} {prev, next}

# Move window to workspace and focus it
super + alt + {1-9,0}
	id=$(bspc query -N -n); bspc node --to-desktop 'focused:^{1-9,10}'; bspc node -f ${id}

# Move window to monitor and focus it
super + alt + {bracketleft, bracketright}
	id=$(bspc query -N -n); bspc node --to-monitor {prev,next}; bspc node -f ${id}

# Restart bspwm
super + shift + r
	bspc wm -r

# Toggle sticky window and send notification
super + @space
	[ $(bspc query -N -n focused.sticky) ] && \
	$(bspc node -g sticky && notify-send "bspwm" "Sticky Window Deactivated") || \
	$(bspc node -g sticky && notify-send "bspwm" "Sticky Window Activated")

# Toggle gaps
super + g
	[ "$(bspc config window_gap)" -gt "0" ] && bspc config window_gap 0 || bspc config window_gap 15

# swap the current window and the largest window
super + alt + g
	bspc node -s biggest.window.local

# Rotate windows
super + alt + {comma, period}
	bspc node @/ -R {-90,90}

# Re-focus last focused desktop
super + period; {_, super} + period
	bspc desktop -f last

# Preselect ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# Cancel preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# Expand a window by moving one of its side outward
super + shift + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# Contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Kill focused window
super + BackSpace
	bspc node -{c}

# Toggle fullscreen
super + f
	bspc node -t \~fullscreen

# Move current window to a pre-selected space
super + ctrl + s
	bspc node -n last.!automatic

#
# Scripts
#

# # Expand/contract a window by moving one of its side outward/inward
# super + r : {h,j,k,l}
#     STEP=20; SELECTION={1,2,3,4}; \
#     bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
#     bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

# Move window
super + alt + {h,j,k,l}
	~/.config/bspwm/scripts/bspwm_smart_move {west,south,north,east}

# Focus window
super + {h,j,k,l}
	~/.config/bspwm/scripts/smart-focus {west,south,north,east}

# Rename workspace (similar to tmux)
super + comma
	~/.config/bspwm/scripts/workspace-rename

# Move window when state == floating
# Preselect direction of the next window when state == tiled/pseudo_tiled
super + ctrl + {h,j,k,l}
	~/.config/bspwm/scripts/move-floating-or-preselect-direction {0, 1, 2, 3}

super + {button4,button5}
	[ {+,''} ] && \
	$(bspc node -z left -20 0; bspc node -z bottom 0 20; bspc node -z top 0 -20; bspc node -z right 20 0) || \
	$(bspc node -z right -20 0; bspc node -z top 0 20; bspc node -z bottom 0 -20; bspc node -z left 20 0)

#
# Modes
#

## Resize mode

# expand or contract all sides at once
super + r : {plus,equal,minus,underscore}
	[ {+,+,'',''} ] && \
	$(bspc node -z left -20 0; bspc node -z bottom 0 20; bspc node -z top 0 -20; bspc node -z right 20 0) || \
	$(bspc node -z right -20 0; bspc node -z top 0 20; bspc node -z bottom 0 -20; bspc node -z left 20 0)

# expand a window by moving one of its side outward
super + r : {h,j,k,l,H,J,K,L}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
# contract a window by moving one of its side inward
super + r : {H,J,K,L}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
# Move window when state == floating
# Preselect direction of the next window when state == tiled/pseudo_tiled
super + r : super + ctrl + {h,j,k,l}
	~/.config/bspwm/scripts/move-floating-or-preselect-direction {0, 1, 2, 3}
# Cancel resize mode
super + r ; {super + r, super + Escape}
	xdotool key Escape

## Prefix mode

# Focus or send to the given desktop
super + period ; {_,shift + } {1-9,0}
	bspc {desktop --focus,node --to-desktop} 'focused:^{1-9,10}'
# Move window to workspace and focus it
super + period ; alt + {1-9,0}
	id=$(bspc query -N -n); bspc node --to-desktop 'focused:^{1-9,10}'; bspc node -f ${id}

# Preselect ratio
super + ctrl + period : {1-9}
	bspc node -o 0.{1-9}
# Cancel preselection for the focused node and exit prefix mode
super + ctrl + period ; space
	bspc node -p cancel; xdotool key Escape
# Move current window to a pre-selected space and exit prefix mode
super + ctrl + period ; s
	bspc node -n last.!automatic; xdotool key Escape
# Move window when state == floating
# Preselect direction of the next window when state == tiled/pseudo_tiled
super + ctrl + period : {h,j,k,l}
	bspc node -p {west, south, north, east}
